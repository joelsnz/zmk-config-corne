/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LEFT_POSITIONS  0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define RIGHT_POSITIONS 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41
/* Key Positions
╭────────────────────────╮ ╭────────────────────────╮
│  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
│ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
│ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
            ╰────────────╯ ╰────────────╯
*/

/ {
  behaviors {
    hrml: home_row_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>; // must be <2>
      tapping-term-ms = <200>; // ms to trigger a hold
      quick-tap-ms = <150>; // double tap ms to avoid hold
      flavor = "balanced";
      hold-trigger-key-positions = < RIGHT_POSITIONS >;
      bindings =
        <&kp>, // hold behavior
        <&kp>; // tap behavior
    };

    hrmr: home_row_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>; // must be <2>
      tapping-term-ms = <200>; // ms to trigger a hold
      quick-tap-ms = <150>; // double tap ms to avoid hold
      flavor = "balanced";
      hold-trigger-key-positions = < LEFT_POSITIONS >;
      bindings =
        <&kp>, // hold behavior
        <&kp>; // tap behavior
    };
    
    lthp: layer_tap_hold_preferred {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>; // must be <2>
      tapping-term-ms = <300>; // ms to trigger a hold
      quick-tap-ms = <150>; // double tap ms to avoid hold
      flavor = "hold-preferred";
      bindings = 
        <&mo>, // hold behavior
        <&kp>; // tap behavior
      };

    mthp: mod_tap_hold_preferred {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>; // must be <2>
      tapping-term-ms = <300>; // ms to trigger a hold
      quick-tap-ms = <150>; // double tap ms to avoid hold
      flavor = "hold-preferred";
      bindings = 
        <&kp>, // hold behavior
        <&kp>; // tap behavior
      };

    mttp: mod_tap_tap_preferred {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>; // must be <2>
      tapping-term-ms = <300>; // ms to trigger a hold
      quick-tap-ms = <150>; // double tap ms to avoid hold
      flavor = "tap-preferred";
      bindings = 
        <&kp>, // hold behavior
        <&kp>; // tap behavior
      };
    };
  };

/ {
	macros {
		ES_NTILDE: ES_NTILDE {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = 
					<&macro_tap &kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N9>;
    };
	};
};

/{
  keymap {
    compatible = "zmk,keymap";

      default_layer { /* 
╭─────────────────────────╮ ╭─────────────────────────╮
│ TAB   Q   W   E   R   T │ │ Y   U   I   O   P  BSPC │
│ CTRL  A   S   D   F   G │ │ H   J   K   L   ;   '   │
│ SHFT  Z   X   C   V   B │ │ N   M   ,   .   /  ESC  │
╰───────────╮ GUI LWR ENT │ │ SPC RSE ALT ╭───────────╯
            ╰─────────────╯ ╰─────────────╯ */
        bindings = <
  &kp TAB &kp Q &kp W &kp E &kp R &kp T  &kp Y &kp U &kp I &kp O &kp P &kp BSPC
  &kp LCTRL &mt LGUI A &mt LALT S &mt LSHFT D &mt LCTL F &kp G   &kp H &mt RGUI J &mt RSHFT K &mt LALT L &mt RGUI SEMI &kp SQT
  &kp LSHFT &kp Z &kp X &kp C &kp V &kp B  &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
  &kp LGUI &mo 1 &kp RET  &kp SPACE &mo 2 &kp RALT
        >;
      };
      lower_layer { /* 
╭─────────────────────────╮ ╭─────────────────────────╮
│ TAB   1   2   3   4   5 │ │ 6   7   8   9   0  BSPC │
│ BTCL BT1 BT2 BT3 BT4 BT5│ │LFT DWN  UP RGT          │
│ SHFT                    │ │                         │
╰───────────╮ GUI     ENT │ │ SPC     ALT ╭───────────╯
            ╰─────────────╯ ╰─────────────╯ */
        bindings = <
  &kp TAB &kp N1 &kp N2 &kp N3 &kp N4 &kp N5  &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
  &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &ES_NTILDE &trans
  &kp LSHFT &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
  &kp LGUI &trans &kp RET &kp SPACE &trans &kp RALT
        >;
      };
      raise_layer { /* 
╭─────────────────────────╮ ╭─────────────────────────╮
│ TAB   !   @   #   $   % │ │ ^   &   *   (   )  BSPC │
│ CTRL                    │ │ -   =   [   ]   \   `   │
│ SHFT                    │ │ _   +   {   }   |   ~   │
╰───────────╮ GUI     ENT │ │ SPC     ALT ╭───────────╯
            ╰─────────────╯ ╰─────────────╯ */
      bindings = <
  &kp TAB &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT  &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
  &kp LCTRL &trans &trans &trans &trans &trans  &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp GRAVE
  &kp LSHFT &trans &trans &trans &trans &trans  &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE &kp TILDE
  &kp LGUI &trans &kp RET &kp SPACE &trans &kp RALT
      >;
    };
  };
};
